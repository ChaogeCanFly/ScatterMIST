; Rigorous coupled wave theory for a grating, form fitted into a BRDF_Model
MODEL = RCW_BRDF_Model

VARIABLES: 
	; 
	pi = 4*atan(1)

	; 
	deg = pi/180

	; Half angle over which BRDF is spread for a delta-function 
	alpha = 3*deg    ; Half angle over which BRDF is spread for a delta-function 

	; The solid angle collected by the detector
	detector = pi*alpha^2    ; The solid angle collected by the detector

	; 
	lambda = 1.555

	; Incident Angle in degrees
	thetai = 1    ; Incident Angle in degrees

	; Rotation angle of sample in degrees
	sample_rotation = 0    ; Rotation angle of sample in degrees

	; 
	zeta = 0

	; 
	type = 1

	; Period of the grating
	period1 = 1.508    ; Period of the grating

	; 
	period2 = 1.508

	; 
	k0 = 2*pi/lambda

	; 
	K1 = 2*pi/period1

	; 
	K2 = 2*pi/period2

	; Diffraction order
	n1 = 0    ; Diffraction order

	; 
	n2 = 0

	; 
	medium_i = 1

	; 
	medium_t = 1

	; 
	medium = if(or(eq(type,0),eq(type,3)),medium_i,medium_t)

	; 
	g.alpha = k0*sind(thetai)*cosd(-sample_rotation)+n1*K1

	; 
	g.beta = k0*sind(thetai)*sind(-sample_rotation+zeta)+n2*K2

	; 
	k.x = g.alpha

	; 
	k.y = -g.alpha*tand(zeta)+g.beta/cosd(zeta)

	; Polar angle of diffraction
	thetas = asind(sqrt(k.x^2+k.y^2)/k0/medium)    ; Polar angle of diffraction

	; Azimuthal angle of diffraction
	phis = atan2d(k.y,k.x)+sample_rotation    ; Azimuthal angle of diffraction

	; 
	#quiet = 1


	; 
	minsamples = 1

	; 
	differential = (2*deg)^2

	; 
	incidentangle = thetai*deg

	; 
	incidentpol = (1,0,0,0)

	; 
	rotation = sample_rotation*deg


	; Wavelength [um] <double>
	lambda = lambda
	#lambda = lambda

	; Substrate <dielectric_function>
	substrate = 1
	#substrate = substrate

	; (0) for Forward/Reflection, (1) for Forward/Transmission, (2) for Backward/Reflection, or (3) for Backward/Transmission <int>
	type = type
	#type = type

	; Half angle of diffraction cone [rad] <double>
	alpha = alpha
	#alpha = alpha

	; Maximum order <int>
	order = 25
	#order = order

	; Grating <Grating_Ptr>
	$grating = Imprint_Grating

	; Period of the grating [um] <double>
	grating.period = period1
	#grating.period = grating.period

	; Incident medium <dielectric_function>
	grating.medium_i = (1,0)
	#grating.medium_i = grating.medium_i

	; Transmitted medium <dielectric_function>
	grating.medium_t = 1
	#grating.medium_t = grating.medium_t

	; Profile of imprinted layer <Imprint_Profile_Ptr>
	$grating.profile = GCT_Imprint_Profile

	; Top width of trapezoid [um] <double>
	grating.profile.topwidth = 0.1
	#grating.profile.topwidth = grating.profile.topwidth

	; Middle extension of trapezoid [um] <double>
	grating.profile.midextend = 0
	#grating.profile.midextend = grating.profile.midextend

	; Bottom extension of trapezoid [um] <double>
	grating.profile.bottomextend = 0
	#grating.profile.bottomextend = grating.profile.bottomextend

	; Midpoint relative to top (0-1) <double>
	grating.profile.breakpoint = 1
	#grating.profile.breakpoint = grating.profile.breakpoint

	; Height [um] <double>
	grating.profile.height = 0.2
	#grating.profile.height = grating.profile.height

	; Width of sunken top [um] <double>
	grating.profile.sinkwidth = 0
	#grating.profile.sinkwidth = grating.profile.sinkwidth

	; Depth of sunken top [um] <double>
	grating.profile.sinkdepth = 0
	#grating.profile.sinkdepth = grating.profile.sinkdepth

	; Smoothing variable [um] <double>
	grating.profile.smooth = 0.01
	#grating.profile.smooth = grating.profile.smooth

	; Residual layer [um] <double>
	grating.profile.residual = 0.0001
	#grating.profile.residual = grating.profile.residual

	; Log2 of Number fourier steps <int>
	grating.profile.ftstep = 12
	#grating.profile.ftstep = grating.profile.ftstep

	; Layer material <dielectric_function>
	grating.material = (1.59,0)
	#grating.material = grating.material

	; Stack between substrate and imprinted material <dielectric_stack>
	$grating.understack = ""

	; Number of layers in profile region <int>
	grating.nlevels = 20
	#grating.nlevels = grating.nlevels

END 

VARY: 
	; 
	FOR lambda FROM 1.55 TO 1.56 BY 0.0001

END 

INTEGRALS: 
	ref00 = DIFFERENTIAL
		CENTER = (thetas*deg,phis*deg)
		INPOL = (1,0,0,0)
		POL = (detector,0,0,0)
		END
	ref01 = DIFFERENTIAL
		CENTER = (thetas*deg,phis*deg)
		INPOL = (0,1,0,0)
		POL = (detector,0,0,0)
		END
	ref02 = DIFFERENTIAL
		CENTER = (thetas*deg,phis*deg)
		INPOL = (0,0,1,0)
		POL = (detector,0,0,0)
		END
	ref03 = DIFFERENTIAL
		CENTER = (thetas*deg,phis*deg)
		INPOL = (0,0,0,1)
		POL = (detector,0,0,0)
		END
	ref10 = DIFFERENTIAL
		CENTER = (thetas*deg,phis*deg)
		INPOL = (1,0,0,0)
		POL = (0,detector,0,0)
		END
	ref11 = DIFFERENTIAL
		CENTER = (thetas*deg,phis*deg)
		INPOL = (0,1,0,0)
		POL = (0,detector,0,0)
		END
	ref12 = DIFFERENTIAL
		CENTER = (thetas*deg,phis*deg)
		INPOL = (0,0,1,0)
		POL = (0,detector,0,0)
		END
	ref13 = DIFFERENTIAL
		CENTER = (thetas*deg,phis*deg)
		INPOL = (0,0,0,1)
		POL = (0,detector,0,0)
		END
	ref20 = DIFFERENTIAL
		CENTER = (thetas*deg,phis*deg)
		INPOL = (1,0,0,0)
		POL = (0,0,detector,0)
		END
	ref21 = DIFFERENTIAL
		CENTER = (thetas*deg,phis*deg)
		INPOL = (0,1,0,0)
		POL = (0,0,detector,0)
		END
	ref22 = DIFFERENTIAL
		CENTER = (thetas*deg,phis*deg)
		INPOL = (0,0,1,0)
		POL = (0,0,detector,0)
		END
	ref23 = DIFFERENTIAL
		CENTER = (thetas*deg,phis*deg)
		INPOL = (0,0,0,1)
		POL = (0,0,detector,0)
		END
	ref30 = DIFFERENTIAL
		CENTER = (thetas*deg,phis*deg)
		INPOL = (1,0,0,0)
		POL = (0,0,0,detector)
		END
	ref31 = DIFFERENTIAL
		CENTER = (thetas*deg,phis*deg)
		INPOL = (0,1,0,0)
		POL = (0,0,0,detector)
		END
	ref32 = DIFFERENTIAL
		CENTER = (thetas*deg,phis*deg)
		INPOL = (0,0,1,0)
		POL = (0,0,0,detector)
		END
	ref33 = DIFFERENTIAL
		CENTER = (thetas*deg,phis*deg)
		INPOL = (0,0,0,1)
		POL = (0,0,0,detector)
		END
	refs = DIFFERENTIAL
		CENTER = (thetas*deg,phis*deg)
		INPOL = (1,1,0,0)
		POL = (detector,0,0,0)
		END
	refp = DIFFERENTIAL
		CENTER = (thetas*deg,phis*deg)
		INPOL = (1,-1,0,0)
		POL = (detector,0,0,0)
		END
END 

OUTPUTS: 
	   1 thetas
	   2 ref00
	   3 ref01/ref00
	   4 ref02/ref00
	   5 ref03/ref00
	   6 ref10/ref00
	   7 ref11/ref00
	   8 ref12/ref00
	   9 ref13/ref00
	  10 ref20/ref00
	  11 ref21/ref00
	  12 ref22/ref00
	  13 ref23/ref00
	  14 ref30/ref00
	  15 ref31/ref00
	  16 ref32/ref00
	  17 ref33/ref00
	  18 refs
	  19 refp
END 

FILES: 
	; 
	format = %16.10le\t

	; 
	results = ""

	; 
	listing = ""

END 

